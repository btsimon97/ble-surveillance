This document describes how to install the service on your system and set it 
up with systemd.

Deployment of the systemd unit file and tmpfiles config file is required to be
able to run the middleware as a nonroot user and be able to create the socket
correctly. It's highly recommended that you follow these steps even if you are
a developer, as this allows you to run the software as a non-root user, which
is much safer.

1. Create the user and group:
	The service is currently configured to use btsurveillance-processing
	as the user and btsurveillance as the group for the service.
	
	They do not exist by default on Linux systems and need to be manually
	created. You can set this up using the following commands run as
	sudo/root:
		1. useradd btsurveillance-processing
		2. groupadd btsurveillance
		3. groupmems -g btsurveillance -a btsurveillance-processing
	
	Note that if you are running these commands on a Debian distro you
	will need to set a password for the root user first, as the groupmems
	command will prompt for root's password on that distro and those based
	on it.
	
2. Install the tmpfiles config:
	The processing service uses a Unix socket file to receive messages
	from Kismet and other sources. This socket file can be found at
	/run/bt-surveillance/processing.sock
	
	By default non-root users aren't able to create files/directories in
	/run, so we need to have systemd create the bt-surveillance folder in
	/run with proper permissions so we can write there.
	
	To do this you'll need to run the following commands as root/sudo,
	from the directory where you code checkout is stored:
		1. cp bt-surveillance.conf.systemd-tmpfiles /lib/tmpfiles.d/bt-surveillance.conf
		2. systemd-tmpfiles --create --remove --boot
		
	If you do an ls of /run, you should now see the bt-surveillance dir,
	with proper permissions configured.

3. Install the service executable:
	We now need to install the executable file in the system /bin directory
	so that systemd and other programs on the system can execute it.
	
	We can do that with the following commands, run from the directory
	where the code checkout is as root/sudo:
		1. cp middleware.py /bin/bt-surveillance
		2. chmod +x /bin/bt-surveillance
	
4. Install the systemd service:
	In order to have systemd manage the service we need to install the unit
	file so that systemd knows about our service.
	
	We can do that with the following commands, run from the directory
	where the code checkout is as root/sudo:
		1. cp bt-surveillance.service /etc/systemd/system/
		2. systemctl daemon-reload
		
5. Startup the service:
	After the previous steps we can now startup the service using
	the command systemctl start bt-surveillance.service as root/sudo.
	
	Note that if you modify the on-disk binary used in the service you
	will need to run systemctl daemon-reload as root/sudo to refresh the
	unit file data.
